(function ($) {
    $.fn.disableSelectionDropotron = function () {
        return this.css({
            "user-select": "none",
            "-khtml-user-select": "none",
            "-moz-user-select": "none",
            "-o-user-select": "none",
            "-webkit-user-select": "none"
        });
    };

    $.fn.dropotron = function (options) {
        if (this.length === 0) return this;
        if (this.length > 1) {
            this.each(function () {
                $(this).dropotron(options);
            });
            return this;
        }
        return $.dropotron($.extend({ selectorParent: this }, options));
    };

    $.dropotron = function (options) {
        var settings = $.extend({
            selectorParent: null,
            baseZIndex: 1000,
            menuClass: "dropotron",
            expandMode: "hover",
            hoverDelay: 150,
            hideDelay: 250,
            openerClass: "opener",
            openerActiveClass: "active",
            submenuClassPrefix: "level-",
            mode: "fade",
            speed: "fast",
            easing: "swing",
            alignment: "left",
            offsetX: 0,
            offsetY: 0,
            globalOffsetY: 0,
            IEOffsetX: 0,
            IEOffsetY: 0,
            noOpenerFade: true,
            detach: true,
            cloneOnDetach: true
        }, options);

        var parent = settings.selectorParent,
            menus = parent.find("ul"),
            body = $("body"),
            htmlBody = $("body,html"),
            windowEl = $(window),
            isAnimating = false,
            hoverTimeout = null,
            hideTimeout = null;

        parent.on("doCollapseAll", function () {
            menus.trigger("doCollapse");
        });

        menus.each(function () {
            var menu = $(this),
                parentItem = menu.parent();

            if (settings.hideDelay > 0) {
                menu.add(parentItem).on("mouseleave", function () {
                    clearTimeout(hideTimeout);
                    hideTimeout = setTimeout(function () {
                        menu.trigger("doCollapse");
                    }, settings.hideDelay);
                });
            }

            menu.disableSelectionDropotron()
                .hide()
                .addClass(settings.menuClass)
                .css("position", "absolute")
                .on("mouseenter", function () {
                    clearTimeout(hideTimeout);
                })
                .on("doExpand", function () {
                    if (menu.is(":visible")) return false;
                    clearTimeout(hideTimeout);
                    menus.each(function () {
                        var otherMenu = $(this);
                        if (!$.contains(otherMenu.get(0), parentItem.get(0))) {
                            otherMenu.trigger("doCollapse");
                        }
                    });

                    var position = parentItem.offset(),
                        menuWidth = menu.outerWidth(),
                        parentWidth = parentItem.outerWidth(),
                        leftPos;

                    switch (settings.alignment) {
                        case "right":
                            leftPos = position.left - menuWidth + parentWidth;
                            if (leftPos < 0) leftPos = position.left;
                            break;
                        case "center":
                            leftPos = position.left - Math.floor((menuWidth - parentWidth) / 2);
                            if (leftPos < 0) leftPos = position.left;
                            else if (leftPos + menuWidth > windowEl.width()) leftPos = position.left - menuWidth + parentWidth;
                            break;
                        case "left":
                        default:
                            leftPos = position.left;
                            if (leftPos + menuWidth > windowEl.width()) leftPos = position.left - menuWidth + parentWidth;
                    }

                    menu.css({ left: leftPos + "px", top: position.top + parentItem.outerHeight() + settings.globalOffsetY + "px", opacity: "0.01" }).show();

                    switch (settings.mode) {
                        case "zoom":
                            isAnimating = true;
                            parentItem.addClass(settings.openerActiveClass);
                            menu.animate({ width: "toggle", height: "toggle" }, settings.speed, settings.easing, function () {
                                isAnimating = false;
                            });
                            break;
                        case "slide":
                            isAnimating = true;
                            parentItem.addClass(settings.openerActiveClass);
                            menu.animate({ height: "toggle" }, settings.speed, settings.easing, function () {
                                isAnimating = false;
                            });
                            break;
                        case "fade":
                            isAnimating = true;
                            parentItem.addClass(settings.openerActiveClass);
                            menu.fadeIn(settings.speed, function () {
                                isAnimating = false;
                            });
                            break;
                        case "instant":
                        default:
                            parentItem.addClass(settings.openerActiveClass);
                            menu.show();
                    }
                    return false;
                })
                .on("doCollapse", function () {
                    if (!menu.is(":visible")) return false;
                    menu.hide();
                    parentItem.removeClass(settings.openerActiveClass);
                    menu.find("." + settings.openerActiveClass).removeClass(settings.openerActiveClass);
                    menu.find("ul").hide();
                    return false;
                })
                .on("doToggle", function () {
                    menu.is(":visible") ? menu.trigger("doCollapse") : menu.trigger("doExpand");
                    return false;
                });

            parentItem.disableSelectionDropotron()
                .addClass(settings.openerClass)
                .css("cursor", "pointer")
                .on("click touchend", function (e) {
                    if (!isAnimating) {
                        e.preventDefault();
                        e.stopPropagation();
                        menu.trigger("doToggle");
                    }
                });
        });

        menus.find("a").css("display", "block").on("click touchend", function (e) {
            if (!isAnimating && $(this).attr("href").length < 1) {
                e.preventDefault();
            }
        });

        windowEl.on("scroll", function () {
            parent.trigger("doCollapseAll");
        }).on("keypress", function (e) {
            if (!isAnimating && e.keyCode === 27) {
                e.preventDefault();
                parent.trigger("doCollapseAll");
            }
        });

        htmlBody.on("click touchend", function () {
            if (!isAnimating) {
                parent.trigger("doCollapseAll");
            }
        });
    };
})(jQuery);
